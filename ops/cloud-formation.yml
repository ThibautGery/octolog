Resources:
  staticContent:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:service}-${self:provider.stage}-static
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  backup:
    Type: AWS::S3::Bucket
    Properties:
        BucketName: ${self:service}-${self:provider.stage}-backup

  usersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:service}-${self:provider.stage}-basics
      AttributeDefinitions:
        - AttributeName: trigram
          AttributeType: S
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: trigram
          KeyType: HASH
        - AttributeName: name
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3

  experiencesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:service}-${self:provider.stage}-experiences
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: trigram
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: trigram
          KeyType: RANGE
        - AttributeName: octopodActivityId
          KeyType: N
        - AttributeName: octopodProjectId
          KeyType: N
      GlobalSecondaryIndexes:
        - IndexName: "octopodActivityId"
          KeySchema:
            - AttributeName: "octopodActivityId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "2"
            WriteCapacityUnits: "2"

      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3

  cdn:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName:
            Fn::GetAtt: [ staticContent, DomainName ]
          Id: myS3Origin
          S3OriginConfig: {}
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
        - log.octo.com.au
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          AllowedMethods:
          - GET
          - HEAD
          TargetOriginId: myS3Origin
          ViewerProtocolPolicy: allow-all
        PriceClass: PriceClass_All
  dns:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: Z3D9NL1GYN6KC0
      RecordSets:
      - Name: "log.octo.com.au"
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2 # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-hostedzoneid
          DNSName:
            Fn::GetAtt: [ cdn, DomainName ]
